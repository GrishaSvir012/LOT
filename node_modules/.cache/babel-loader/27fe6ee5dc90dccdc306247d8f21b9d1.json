{"ast":null,"code":"var _jsxFileName = \"/Users/grigoriy/Desktop/test/client/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Route, Routes } from 'react-router-dom';\nimport { Container } from 'reactstrap';\nimport Card from './components/Card';\nimport getLots from './Redux/actions/lotsAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [lots, setLots] = useState([]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getLots().then(res => setLots(res)));\n  }, []);\n  console.log(lots);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: lots.length ? lots.map(item => /*#__PURE__*/_jsxDEV(Card, {\n      item: item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 42\n    }, this)) : 'Лотов нет'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"z4YXzKmNZ5n7o9JH3HKOqAo8wW8=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","Route","Routes","Container","Card","getLots","App","lots","setLots","dispatch","then","res","console","log","length","map","item","id"],"sources":["/Users/grigoriy/Desktop/test/client/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Route, Routes } from 'react-router-dom';\nimport { Container } from 'reactstrap';\nimport Card from './components/Card';\nimport getLots from './Redux/actions/lotsAction';\n\nfunction App() {\n  const [lots, setLots] = useState([]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getLots().then((res) => setLots(res)));\n  }, []);\n  console.log(lots);\n  return (\n    <Container>\n      {\n        lots.length ? lots.map((item) => <Card item={item} key={item.id} />) : 'Лотов нет'\n      }\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,4BAApB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAMU,QAAQ,GAAGT,WAAW,EAA5B;EACAF,SAAS,CAAC,MAAM;IACdW,QAAQ,CAACJ,OAAO,GAAGK,IAAV,CAAgBC,GAAD,IAASH,OAAO,CAACG,GAAD,CAA/B,CAAD,CAAR;EACD,CAFQ,EAEN,EAFM,CAAT;EAGAC,OAAO,CAACC,GAAR,CAAYN,IAAZ;EACA,oBACE,QAAC,SAAD;IAAA,UAEIA,IAAI,CAACO,MAAL,GAAcP,IAAI,CAACQ,GAAL,CAAUC,IAAD,iBAAU,QAAC,IAAD;MAAM,IAAI,EAAEA;IAAZ,GAAuBA,IAAI,CAACC,EAA5B;MAAA;MAAA;MAAA;IAAA,QAAnB,CAAd,GAAuE;EAF3E;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GAdQX,G;UAEUN,W;;;KAFVM,G;AAgBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}